import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as e,g as t,b as l,o as n}from"./app-CF5TaJvO.js";const h="/img/docs/proxmox-vm-gpu-1.jpg",p="/img/docs/proxmox-vm-gpu-2.jpg",o="/img/docs/proxmox-vm-gpu-3.jpg",d={};function r(k,i){return n(),a("div",null,[i[0]||(i[0]=e("p",null,"Привет, гик! Сидишь тут со своим мощным процессором Intel, у которого есть встроенная графика, а ты её только для вывода рабочего стола Proxmox используешь? Непорядок. Это всё равно что купить спортивную машину и кататься на ней только до магазина и обратно. Давай-ка раскроем её потенциал и подарим аппаратное ускорение виртуальным машинам! Сегодня будем делиться встроенной графикой (iGPU) между виртуальными машинами в Proxmox с помощью технологии Intel GVT-g.",-1)),t(" more "),i[1]||(i[1]=l(`<p><strong>Intel GVT-g (Graphics Virtualization Technology for Guest)</strong> — это технология виртуализации графики от Intel, предназначенная для эффективного распределения ресурсов интегрированных графических процессоров (iGPU), таких как Intel UHD Graphics, между несколькими виртуальными машинами (VM) и контейнерами.</p><div class="hint-container warning"><p class="hint-container-title">Поддерживаемые процессоры</p><p>Intel GVT-g поддерживается только на процессорах Intel 5-10 поколения!</p><p>Поддерживаемые семейства процессоров:</p><ul><li>Broadwell</li><li>Skylake</li><li>Kaby Lake</li><li>Coffee Lake</li><li>Comet Lake</li></ul></div><h2 id="подготовка-bios" tabindex="-1"><a class="header-anchor" href="#подготовка-bios"><span>Подготовка BIOS</span></a></h2><p>Убедитесь, что <code>Intel VT-d</code> активирована в BIOS вашего хост-компьютера(proxmox). В зависимости от модели материнской платы, эта функция может называться «Включить технологию виртуализации».</p><p>Чтобы <strong>Intel GVT-g</strong> мог предложить максимальное количество профилей, выделите как можно больше видеопамяти для интегрированного графического процессора (iGPU). Для этого увеличьте размер интегрированного графического устройства (IGD) в BIOS до максимально возможного уровня.</p><h2 id="конфигурация-proxmox" tabindex="-1"><a class="header-anchor" href="#конфигурация-proxmox"><span>Конфигурация Proxmox</span></a></h2><p>В Proxmox необходимо позаботиться о двух вещах: настройке модулей ядра и загрузчика GRUB.</p><h3 id="шаг-1-настроика-модулеи-ядра" tabindex="-1"><a class="header-anchor" href="#шаг-1-настроика-модулеи-ядра"><span>Шаг 1: Настройка модулей ядра</span></a></h3><p>Теперь нужно добавить модули ядра и задать для них параметры, чтобы обеспечить сквозную передачу PCIe. Для этого отредактируйте или создайте следующие файлы:</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="/etc/modules"><span>/etc/modules</span></div><div class="language-ini" data-highlighter="shiki" data-ext="ini" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-ini"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Modules required for PCIe passthrough</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">vfio</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">vfio_pci</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">vfio_iommu_type1</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">vfio_virqfd</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Modules required for Intel GVT</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">kvmgt</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">exngt</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">vfio_mdev</span></span></code></pre></div></div><div class="code-block-with-title"><div class="code-block-title-bar" data-title="/etc/modprobe.d/blacklist.conf"><span>/etc/modprobe.d/blacklist.conf</span></div><div class="language-ini" data-highlighter="shiki" data-ext="ini" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-ini"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">blacklist nouveau</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">blacklist nvidia</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">blacklist radeon</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">blacklist snd_hda_intel</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">blacklist snd_hda_codec_hdmi</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">blacklist snd_sof_pci</span></span></code></pre></div></div><div class="code-block-with-title"><div class="code-block-title-bar" data-title="/etc/modprobe.d/drm.conf"><span>/etc/modprobe.d/drm.conf</span></div><div class="language-ini" data-highlighter="shiki" data-ext="ini" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-ini"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">options drm </span><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">debug</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">0</span></span></code></pre></div></div><div class="code-block-with-title"><div class="code-block-title-bar" data-title="/etc/modprobe.d/i915.conf"><span>/etc/modprobe.d/i915.conf</span></div><div class="language-ini" data-highlighter="shiki" data-ext="ini" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-ini"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">options i915 </span><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">enable_gvt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">1</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">options i915 </span><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">enable_guc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">0</span></span></code></pre></div></div><div class="code-block-with-title"><div class="code-block-title-bar" data-title="/etc/modprobe.d/kvm.conf"><span>/etc/modprobe.d/kvm.conf</span></div><div class="language-ini" data-highlighter="shiki" data-ext="ini" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-ini"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">options kvm </span><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">ignore_msrs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">1</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">options kvm </span><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">report_ignored_msrs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">0</span></span></code></pre></div></div><div class="code-block-with-title"><div class="code-block-title-bar" data-title="/etc/modprobe.d/vfio_iommu_type1.conf"><span>/etc/modprobe.d/vfio_iommu_type1.conf</span></div><div class="language-ini" data-highlighter="shiki" data-ext="ini" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-ini"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">options vfio_iommu_type1 </span><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">allow_unsafe_interrupts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">1</span></span></code></pre></div></div><p>Таким образом, создавая отдельные файлы конфигурации в modprobe, мы можем гарантировать, что параметр <code>GRUB_CMDLINE_LINUX</code> не будет чрезмерно расширен.</p><p>Обновите изменения конфигурации, выполнив команду:</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">update-initramfs</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -u</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -k</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> all</span></span></code></pre></div><h3 id="шаг-2-настроика-grub" tabindex="-1"><a class="header-anchor" href="#шаг-2-настроика-grub"><span>Шаг 2: Настройка GRUB</span></a></h3><p>Отредактируйте файл конфигурации GRUB и измените параметр <code>GRUB_CMDLINE_LINUX</code> следующим образом:</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="/etc/default/grub"><span>/etc/default/grub</span></div><div class="language-ini" data-highlighter="shiki" data-ext="ini" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-ini"><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">GRUB_CMDLINE_LINUX</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;intel_iommu=on iommu=pt initcall_blacklist=sysfb_init&quot;</span></span></code></pre></div></div><p>Чтобы применить эти изменения, обновите GRUB и перезапустите систему:</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">update-grub</span></span></code></pre></div><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">shutdown</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -r</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> now</span></span></code></pre></div><p>После перезагрузки убедитесь, что IOMMU включен:</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">dmesg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">grep</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> DMAR</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> IOMMU</span></span></code></pre></div><h2 id="конфигурация-виртуальнои-машины-с-windows" tabindex="-1"><a class="header-anchor" href="#конфигурация-виртуальнои-машины-с-windows"><span>Конфигурация виртуальной машины с Windows</span></a></h2><h3 id="шаг-1-создаем-правильную-основу" tabindex="-1"><a class="header-anchor" href="#шаг-1-создаем-правильную-основу"><span>Шаг 1: Создаём правильную основу</span></a></h3><p>Переходим в веб-интерфейс Proxmox и создаём новую виртуальную машину. Но не как обычно, а с особыми настройками:</p><ul><li><strong>Память:</strong> <code>Динамическое изменение размера памяти — ОТКЛЮЧЕНО</code> (иначе наш vGPU может упасть в обморок).</li><li><strong>Процессор:</strong> Выставляем <code>host</code>.</li><li><strong>BIOS:</strong> Обязательно <code>OVMF (UEFI)</code>. Без этого даже не пытайтесь.</li><li><strong>Машина:</strong> Выбираем <code>pc-q35</code>. Это не обсуждается.</li></ul><p>Пока не добавляем никаких устройств PCIe, только базовый набор. Устанавливаем Windows через виртуальный дисплей (Proxmox Display Console), как привыкли.</p><div class="hint-container info"><p class="hint-container-title">Важный совет</p><p>Заранее скачайте <a href="https://fedorapeople.org/groups/virt/virtio-win/direct-downloads/stable-virtio/virtio-win.iso" target="_blank" rel="noopener noreferrer">последнюю стабильную версию драйверов VirtIO</a> и залейте её на хост. Они нам понадобятся сразу после установки системы. А также при установке Windows если вы выбрали <code>Контроллер SCSI - VirtIO SCSI single</code>, что является хорошим выбором.</p></div><h3 id="шаг-2-устанавливаем-драиверы-и-прячем-виртуальныи-экран" tabindex="-1"><a class="header-anchor" href="#шаг-2-устанавливаем-драиверы-и-прячем-виртуальныи-экран"><span>Шаг 2: Устанавливаем драйверы и &quot;прячем&quot; виртуальный экран</span></a></h3><p>После установки Windows подключаем образ с драйверами VirtIO через интерфейс Proxmox. Заходим в виртуальную машину, идём в проводник, находим наш CD-диск и запускаем <code>virtio-win-guest-tools.exe</code> от имени администратора. Проходим все шаги мастера установки.</p><p>Теперь — самый ответственный момент. <strong>Выключаем</strong> виртуальную машину. Заходим в её настройки, в раздел <code>Оборудование</code>, находим виртуальный <code>Экран</code> и меняем его значение на <code>нет (none)</code>.</p><div class="hint-container important"><p class="hint-container-title">Важно</p><p>После этого Proxmox Display Console перестанет работать. Не паникуйте! Для дальнейшей работы мы будем использовать встроенный в Windows RDP (Remote Desktop). Убедитесь, что он включён.</p></div><h3 id="шаг-3-добавляем-волшебныи-vgpu" tabindex="-1"><a class="header-anchor" href="#шаг-3-добавляем-волшебныи-vgpu"><span>Шаг 3: Добавляем волшебный vGPU</span></a></h3><p>В тех же настройках оборудования жмём <code>Добавить</code> -&gt; <code>Устройство PCI</code>.</p><ul><li><strong>Raw-устройство:</strong> В выпадающем списке ищем наш iGPU. Ориентироваться можно по PCI ID (например, <code>0000:00:02.0</code>). <img src="`+h+'" alt="" loading="lazy"></li><li><strong>Тип MDev:</strong> Здесь появится список доступных типов виртуальных GPU. Выбираем самый производительный из доступных (например, <code>i915-GVTg_V5_4</code>). <img src="'+p+'" alt="" loading="lazy"></li><li><strong>Ставим галочки</strong> на <code>Основной графический процессор</code>, <code>PCI-Express</code> и <code>ROM-Bar</code>. <img src="'+o+`" alt="" loading="lazy"></li><li>Жмём <code>Добавить</code>.</li></ul><p>Включаем машину. Подключаемся к ней через RDP (для этого нужно знать её IP-адрес в виртуальной сети).</p><h3 id="шаг-4-финальныи-аккорд-—-драиверы-intel" tabindex="-1"><a class="header-anchor" href="#шаг-4-финальныи-аккорд-—-драиверы-intel"><span>Шаг 4: Финальный аккорд — драйверы Intel</span></a></h3><p>Скачиваем с официального сайта Intel последние драйверы для нашего процессора (например, для UHD Graphics 630) и устанавливаем их. После заходим в Диспетчер устройств. Вы должны увидеть в разделе &quot;Видеоадаптеры&quot; устройство <code>Intel(R) UHD Graphics 630</code>.</p><p>Всё! Теперь ваша Windows-виртуальная машина умеет в аппаратное ускорение, монтаж видео и игры через встроенную графику.</p><h2 id="конфигурация-виртуальнои-машины-с-linux-на-примере-debian" tabindex="-1"><a class="header-anchor" href="#конфигурация-виртуальнои-машины-с-linux-на-примере-debian"><span>Конфигурация виртуальной машины с Linux (на примере Debian)</span></a></h2><p>С Linux всё немного проще, ведь нам не нужны проприетарные драйверы для первичной настройки.</p><h3 id="шаг-1-создаем-такую-же-основу" tabindex="-1"><a class="header-anchor" href="#шаг-1-создаем-такую-же-основу"><span>Шаг 1: Создаём такую же основу</span></a></h3><p>Создаём ВМ с теми же параметрами, что и для Windows:</p><ul><li>Память: без динамического изменения.</li><li>Процессор: <code>host</code>.</li><li>BIOS: <code>OVMF (UEFI)</code>.</li><li>Машина: <code>pc-q35</code>.</li></ul><p>Устанавливаем Debian через Proxmox Console. После установки и первого входа обновляем систему и ставим <code>qemu-guest-agent</code>:</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">apt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> update</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">apt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> upgrade</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -y</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">apt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> qemu-guest-agent</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> openssh-server</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -y</span></span></code></pre></div><p><strong>Обязательно ставим SSH-сервер!</strong> Без него после следующего шага мы потеряем доступ к консоли. После установки выключаем машину для решающих изменений.</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">shutdown</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -h</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> now</span></span></code></pre></div><h3 id="шаг-2-добавляем-vgpu-и-прячем-дисплеи" tabindex="-1"><a class="header-anchor" href="#шаг-2-добавляем-vgpu-и-прячем-дисплеи"><span>Шаг 2: Добавляем vGPU и &quot;прячем&quot; дисплей</span></a></h3><p>В настройках оборудования ВМ так же, как и для Windows:</p><ol><li>Меняем <code>Экран</code> на <code>нет (none)</code>.</li><li>Жмём <code>Добавить</code> -&gt; <code>Устройство PCI</code>.</li><li>Выбираем наш iGPU и нужный <code>Тип MDev</code>.</li><li>Ставим галочки на <code>Основной графический процессор</code>, <code>PCI-Express</code> и <code>ROM-Bar</code>.</li><li>Добавляем устройство.</li></ol><p>Запускаем машину. Теперь подключаемся к ней только по SSH.</p><h3 id="шаг-3-подружим-linux-с-нашим-виртуальным-gpu" tabindex="-1"><a class="header-anchor" href="#шаг-3-подружим-linux-с-нашим-виртуальным-gpu"><span>Шаг 3: Подружим Linux с нашим виртуальным GPU</span></a></h3><p>Подключаемся по SSH и проверяем, видит ли система наш подаренный GPU:</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">lspci</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">grep</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;VGA&#39;</span></span></code></pre></div><p>Если вы видите строчку с <code>Intel Corporation UHD Graphics</code> — значит, устройство передалось успешно!</p><p>Теперь нужно установить драйверы и необходимые библиотеки. Для Debian/Ubuntu это делается одной командой:</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">apt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -y</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> intel-media-va-driver-non-free</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> libva-drm2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> libva-x11-2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> vainfo</span></span></code></pre></div><p>Этого достаточно для большинства задач аппаратного ускорения (декодирование видео в браузере, в mpv и т.д.). Чтобы проверить, что всё работает, выполните:</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">vainfo</span></span></code></pre></div><p>В выводе вы должны увидеть список поддерживаемых форматов кодирования/декодирования (например, H.264, HEVC). Если <code>vainfo</code> ругается на не найденный display, просто перезагрузите виртуальную машину:</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">reboot</span></span></code></pre></div><p>После перезагрузки снова проверьте <code>vainfo</code>. Если список форматов появился — поздравляем! Вы только что подарили своей Linux-виртуальной машине мощное аппаратное ускорение.</p><p><strong>Для полного счастья</strong> (например, для работы с GL) может потребоваться установка дополнительных пакетов:</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">apt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -y</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mesa-va-drivers</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mesa-vulkan-drivers</span></span></code></pre></div><hr><p>Теперь ваши виртуальные машины с Windows и Linux могут использовать мощи встроенной графики, а вы — продолжаете спокойно работать в Proxmox. Магия разделения ресурсов!</p>`,71))])}const b=s(d,[["render",r]]),A=JSON.parse('{"path":"/docs/proxmox/gpu-passthrough.html","title":"Проброс видеокарты (Intel GVT-g GPU Passthrough)","lang":"ru-RU","frontmatter":{"title":"Проброс видеокарты (Intel GVT-g GPU Passthrough)","shortTitle":"Проброс видеокарты","icon":"bi:gpu-card","date":"2025-09-18T00:00:00.000Z","category":["Proxmox"],"tag":["VM","iGPU"],"description":"Привет, гик! Сидишь тут со своим мощным процессором Intel, у которого есть встроенная графика, а ты её только для вывода рабочего стола Proxmox используешь? Непорядок. Это всё р...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Проброс видеокарты (Intel GVT-g GPU Passthrough)\\",\\"image\\":[\\"https://klimov.su/img/docs/proxmox-vm-gpu-1.jpg\\",\\"https://klimov.su/img/docs/proxmox-vm-gpu-2.jpg\\",\\"https://klimov.su/img/docs/proxmox-vm-gpu-3.jpg\\"],\\"datePublished\\":\\"2025-09-18T00:00:00.000Z\\",\\"dateModified\\":\\"2025-09-21T18:34:54.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://klimov.su/docs/proxmox/gpu-passthrough.html"}],["meta",{"property":"og:site_name","content":"Дмитрий Климов"}],["meta",{"property":"og:title","content":"Проброс видеокарты (Intel GVT-g GPU Passthrough)"}],["meta",{"property":"og:description","content":"Привет, гик! Сидишь тут со своим мощным процессором Intel, у которого есть встроенная графика, а ты её только для вывода рабочего стола Proxmox используешь? Непорядок. Это всё р..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://klimov.su/img/docs/proxmox-vm-gpu-1.jpg"}],["meta",{"property":"og:locale","content":"ru-RU"}],["meta",{"property":"og:updated_time","content":"2025-09-21T18:34:54.000Z"}],["meta",{"property":"article:tag","content":"iGPU"}],["meta",{"property":"article:tag","content":"VM"}],["meta",{"property":"article:published_time","content":"2025-09-18T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-21T18:34:54.000Z"}]]},"git":{"createdTime":1758479694000,"updatedTime":1758479694000,"contributors":[{"name":"Godparent","username":"Godparent","email":"dmitriy@klimov.su","commits":1,"url":"https://github.com/Godparent"}]},"readingTime":{"minutes":3.82,"words":1147},"filePathRelative":"docs/proxmox/gpu-passthrough.md","excerpt":"<p>Привет, гик! Сидишь тут со своим мощным процессором Intel, у которого есть встроенная графика, а ты её только для вывода рабочего стола Proxmox используешь? Непорядок. Это всё равно что купить спортивную машину и кататься на ней только до магазина и обратно. Давай-ка раскроем её потенциал и подарим аппаратное ускорение виртуальным машинам! Сегодня будем делиться встроенной графикой (iGPU) между виртуальными машинами в Proxmox с помощью технологии Intel GVT-g.</p>\\n","autoDesc":true}');export{b as comp,A as data};
